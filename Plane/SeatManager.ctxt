#BlueJ class context
comment0.target=SeatManager
comment0.text=\r\n\ Gestiona\ los\ asientos\ del\ avi\u00F3n\r\n\ \r\n\ @author\ Miguel\r\n\ @version\ 24-11-21\r\n
comment1.params=first\ standard
comment1.target=SeatManager(int,\ int)
comment1.text=\r\n\ Constructor\ con\ par\u00E1metros\ de\ la\ clase\ SeatManager\r\n
comment10.params=
comment10.target=Person[][]\ getSeats()
comment10.text=\r\n\ Retorna\ la\ matriz\ bidimensional\ de\ asientos\r\n\ \r\n\ @return\ la\ matriz\ bidimensional\r\n
comment11.params=passenger\ row\ column
comment11.target=boolean\ bookSeat(Person,\ int,\ int)
comment11.text=\r\n\ El\ m\u00E9todo\ bookSeat\ asigna\ a\ una\ persona\ al\ asiento\ cuya\ fila\ y\ columna\ recibe\ como\ par\u00E1metro\ \r\n\ \r\n\ @param\ passenger,\ pasajero\ que\ hace\ la\ reserva\r\n\ @param\ row,\ n\u00FAmero\ de\ fila\ de\ la\ reserva\r\n\ @param\ column,\ n\u00FAmero\ de\ columna\ de\ la\ reserva\r\n
comment12.params=row\ column
comment12.target=Person\ releaseSeat(int,\ int)
comment12.text=\r\n\ Libera\ un\ asiento\ del\ avi\u00F3n\ retornando\ la\ persona\ que\ lo\ ocupaba\r\n\ \r\n\ @param\ row,\ fila\ donde\ se\ encuentra\ la\ posici\u00F3n\ a\ liberar\r\n\ @param\ column,\ columna\ donde\ se\ encuentra\ la\ posici\u00F3n\ a\ liberar\r\n\ \r\n\ @return\ person,\ persona\ liberada\ o\ null\ si\ no\ hay\ nadie\r\n
comment13.params=
comment13.target=Person\ oldestPassenger()
comment13.text=\r\n\ El\ m\u00E9todo\ oldestPassenger\ devolver\u00E1\ al\ pasajero\ de\ m\u00E1s\ edad\ sentado\ en\ \r\n\ el\ avi\u00F3n\ o\ null\ si\ el\ avi\u00F3n\ est\u00E1\ vac\u00EDo\r\n\ \r\n\ @return\ el\ pasajero\ de\ m\u00E1s\ edad\ en\ el\ avi\u00F3n,\ o\ null\ si\ el\ avi\u00F3n\ est\u00E1\ vac\u00EDo\r\n
comment14.params=row
comment14.target=int\ numberOfFreeSeats(int)
comment14.text=\r\n\ El\ m\u00E9todo\ numberOfFreeSeats\ devolver\u00E1\ el\ n\u00FAmero\ de\ asientos\ libres\ \r\n\ en\ la\ fila\ del\ avi\u00F3n\ que\ se\ le\ pasa\ como\ par\u00E1metro\r\n\ \r\n\ @param\ row,\ fila\ del\ avi\u00F3n\ a\ comprobar\ el\ n\u00FAmero\ de\ asientos\ libres\r\n\ @return\ el\ n\u00FAmero\ de\ asientos\ libres\ en\ la\ fila\ indicada\ en\ el\ par\u00E1metro\r\n
comment15.params=
comment15.target=int\ numberOfFreeSeats()
comment15.text=\r\n\ Calcula\ el\ n\u00FAmero\ de\ asientos\ libres\ en\ toda\ la\ matriz\r\n
comment16.params=
comment16.target=void\ print()
comment16.text=\r\n\ El\ m\u00E9todo\ print\ mostrar\u00E1\ el\ estado\ de\ los\ asientos\ del\ avi\u00F3n\r\n\ Una\ X\ para\ un\ adulto\r\n\ Una\ C\ para\ un\ ni\u00F1o\r\n\ Un\ ?\ para\ un\ asiento\ libre\ con\ el\ siguiente\ formato\:\r\n\ \r\n\ \ \ \ \ 0\ \ \ 1\ \ \ 2\ \ \ 3\ \ \ 4\ \ \ 5\r\n\ \ \ \ \ \r\n\ 0\ \ \ X\ \ \ X\ \ \ ?\ \ \ ?\ \ \ ?\ \ \ X\r\n\ 1\ \ \ X\ \ \ X\ \ \ X\ \ \ ?\ \ \ ?\ \ \ ?\r\n\ 2\ \ \ ?\ \ \ X\ \ \ ?\ \ \ ?\ \ \ ?\ \ \ ?\r\n\ 3\ \ \ X\ \ \ X\ \ \ ?\ \ \ X\ \ \ X\ \ \ X\r\n\ 4\ \ \ X\ \ \ X\ \ \ X\ \ \ X\ \ \ X\ \ \ X\r\n\ 5\ \ \ X\ \ \ X\ \ \ ?\ \ \ X\ \ \ X\ \ \ X\r\n\ 6\ \ \ X\ \ \ X\ \ \ X\ \ \ X\ \ \ X\ \ \ X\r\n\ 7\ \ \ X\ \ \ X\ \ \ ?\ \ \ ?\ \ \ ?\ \ \ X\r\n\ ...\r\n
comment17.params=list
comment17.target=int\ removeMales(java.util.ArrayList)
comment17.text=\r\n\ El\ m\u00E9todo\ removeMales\ eliminar\u00E1\ todos\ los\ hombres\ que\ hay\ en\ \r\n\ una\ lista\ recibida\ como\ par\u00E1metro\r\n\ \r\n\ @param\ lista\ de\ personas\r\n\ @return\ n\u00FAmero\ de\ hombres\ eliminados\ de\ la\ lista\r\n
comment18.params=list
comment18.target=int\ removeMales2(java.util.ArrayList)
comment18.text=\r\n\ El\ m\u00E9todo\ removeMales\ eliminar\u00E1\ todos\ los\ hombres\ que\ hay\ en\ \r\n\ una\ lista\ recibida\ como\ par\u00E1metro\r\n\ \r\n\ @param\ lista\ de\ personas\r\n\ @return\ n\u00FAmero\ de\ hombres\ eliminados\ de\ la\ lista\r\n
comment19.params=
comment19.target=java.util.ArrayList\ childrenPassengers()
comment19.text=\r\n\ El\ m\u00E9todo\ childrenPassengers\ retornar\u00E1\ un\ ArrayList\ de\ todos\ los\ pasajeros\r\n\ que\ sean\ ni\u00F1os\r\n\ \r\n\ @return\ ArrayList<Person>,\ la\ lista\ con\ los\ elementos\ persona\ que\ sean\ ni\u00F1os\r\n
comment2.params=first
comment2.target=void\ setFirstRows(int)
comment2.text=\r\n\ Modifica\ el\ valor\ del\ atributo\ firstRows\r\n\ \r\n\ @param\ first,\ n\u00FAmero\ de\ filas\ en\ primera\r\n
comment20.params=area
comment20.target=int\ getNumPax(byte)
comment20.text=\r\n\ El\ m\u00E9todo\ getNumPax\ retornar\u00E1\ el\ n\u00FAmero\ de\ pasajeros\ sentados\ en\ un\ \u00E1rea\ del\ avi\u00F3n\r\n\ Un\ \u00E1rea\ del\ avi\u00F3n\ puede\ ser\ primera\ clase,\ clase\ est\u00E1ndar\ o\ todo\ el\ avi\u00F3n\r\n\ \r\n\ El\ par\u00E1metro\ \u00E1rea\ puede\ ser\ un\ valor\ 1,\ 2\ \u00F3\ 3\ que\ se\ asocia\ con\ las\ constantes\:\r\n\ FIRST_CLASS\ \=\ 1\r\n\ STANDARD_CLASS\ \=\ 2\r\n\ ALL_CLASS\ \=\ 3\r\n\ \r\n\ @param\ area,\ el\ \u00E1rea\ del\ avi\u00F3n\ a\ revisar\ el\ n\u00FAmero\ de\ pasajeros\ total\r\n\ @return\ el\ n\u00FAmero\ de\ pasajeros\ que\ se\ encuentran\ en\ el\ \u00E1rea\ a\ revisar\r\n
comment21.params=row1\ column1\ row2\ column2
comment21.target=int\ getNumPaxBySection(int,\ int,\ int,\ int)
comment21.text=\r\n\ El\ m\u00E9todo\ getNumPaxBySection\ devolver\u00E1\ el\ n\u00FAmero\ de\ pasajeros\ sentados\ en\ una\ secci\u00F3n\ del\ avi\u00F3n\r\n\ Una\ secci\u00F3n\ se\ representa\ mediante\ la\ primera\ posici\u00F3n\ de\ una\ fila\ y\ la\ \u00FAltima\ posici\u00F3n\ de\ una\ fila\r\n\ \r\n\ Por\ ejemplo\:\r\n\ La\ secci\u00F3n\ (0,0)\u2013(3,5)\ abarca\ las\ filas\ 0,\ 1,\ 2\ y\ 3\ completas.\r\n\ La\ secci\u00F3n\ (1,1)\u2013(5,4)\ abarca\ las\ posiciones\ (1,1)(1,2)(1,3)(1,4)\ de\ la\ fila\ 1,\ (2,1)(2,2)(2,3)(2,4)\ de\ la\ fila\ 2\r\n\ \r\n\ @param\ row1,\ fila\ del\ primer\ elemento\r\n\ @param\ column1,\ columna\ del\ primer\ elemento\r\n\ @param\ row2,\ fila\ del\ segundo\ elemento\r\n\ @param\ colun2,\ columna\ del\ segundo\ elemento\r\n
comment22.params=paxNumber
comment22.target=void\ loadPax(int)
comment22.text=\r\n\ El\ m\u00E9todo\ loadPax\ sentar\u00E1\ en\ el\ avi\u00F3n\ a\ un\ n\u00FAmero\ dado\ de\ pasajeros.\r\n\ Se\ ir\u00E1n\ sentando\ en\ los\ asientos\ libres\ desde\ las\ primeras\ filas\ del\ avi\u00F3n\r\n\ \r\n\ @param\ el\ n\u00FAmero\ de\ pasajeros\ a\ sentar\r\n
comment23.params=
comment23.target=java.util.ArrayList\ getYoungestPeople()
comment23.text=\r\n\ El\ m\u00E9todo\ getYoungestPeople\ devolver\u00E1\ un\ ArrayList\ que\ contenga\ a\ las\ personas\ de\ menor\ edad\ sentadas\ en\ el\ avi\u00F3n.\r\n\ Es\ decir,\ las\ personas\ que\ tengan\ la\ edad\ menor\ a\ todas\ las\ sentadas\ en\ el\ avi\u00F3n\r\n\ \r\n\ @return\ el\ ArrayList\ con\ las\ personas\ de\ menor\ edad\ del\ avi\u00F3n\r\n
comment24.params=passengers
comment24.target=void\ loadPassengers(int)
comment24.text=\r\n\ El\ m\u00E9todo\ loadPassengers\ asignar\u00E1\ asientos\ autom\u00E1ticamente\ a\ un\ n\u00FAmero\ de\ pasajeros.\r\n\ \r\n\ El\ n\u00FAmero\ m\u00E1ximo\ de\ pasajeros\ a\ asignar\ passengers\ es\ recibido\ como\ par\u00E1metro\ \r\n\ y\ es\ rechazado\ si\ supera\ la\ capacidad\ total\ del\ avi\u00F3n.\r\n\ \r\n\ Si\ no\ supera\ la\ capacidad,\ los\ pasajeros\ a\ sentar\ se\ deben\ generar\ de\ manera\ aleatoria\r\n\ \r\n\ @param\ el\ n\u00FAmero\ m\u00E1ximo\ de\ pasageros\ a\ asignar\r\n
comment25.params=
comment25.target=void\ fillSeats()
comment25.text=\r\n\ Rellena\ una\ matriz\ de\ personas\r\n
comment26.params=condition\ msg
comment26.target=void\ checkParam(boolean,\ java.lang.String)
comment26.text=\r\n\ El\ m\u00E9todo\ checkParam\ comprueba\ una\ condici\u00F3n,\ y\ si\ es\ falsa,\ lanza\ una\ excepci\u00F3n\r\n\ con\ un\ mensaje\r\n\ \r\n\ @param\ condition,\ la\ condici\u00F3n\ a\ evaluar\r\n\ @param\ msg,\ el\ mensaje\ de\ la\ excepci\u00F3n\r\n
comment27.params=list
comment27.target=boolean\ notNullInList(java.util.ArrayList)
comment27.text=\r\n\ Recorre\ los\ elementos\ de\ la\ lista\ y\ devuelve\ true\ si\ ninguno\ es\ null\ \r\n\ Sino\ devuelve\ false\r\n\ \r\n\ @param\ list,\ lista\ a\ recorrer\ los\ elementos\r\n
comment28.params=matrix
comment28.target=boolean\ notNullInMatrix(Person[][])
comment28.text=\r\n\ Recorre\ los\ elementos\ de\ una\ matriz\ y\ devuelve\ true\ si\ ning\u00FAn\ elemento\ es\ null\ \r\n\ Sino\ devuelve\ false\r\n\ \r\n\ @param\ matrix,\ matriz\ a\ recorrer\ los\ elementos\r\n
comment29.params=initialRow\ finalRow
comment29.target=int\ getNumPax(int,\ int)
comment29.text=\r\n\ El\ m\u00E9todo\ auxiliar\ getNumPax\ dir\u00E1\ el\ n\u00FAmero\ de\ pasajeros\ que\ hay\ entre\ dos\ filas\r\n\ \r\n\ @param\ initialRow,\ la\ fila\ inicial\ a\ comprobar\r\n\ @param\ finalRow,\ la\ fila\ final\ a\ comprobar\r\n\ \r\n\ @return\ el\ n\u00FAmero\ de\ pasajeros\ que\ hay\ entre\ las\ filas\ dadas\ como\ par\u00E1metros\r\n
comment3.params=standard
comment3.target=void\ setStandardRows(int)
comment3.text=\r\n\ Modifica\ el\ valor\ del\ atributo\ standardRows\r\n\ \r\n\ @param\ standard,\ n\u00FAmero\ de\ filas\ en\ clase\ turista\r\n
comment30.params=base\ height
comment30.target=int\ area(int,\ int)
comment30.text=\r\n\ El\ m\u00E9todo\ area\ calcular\u00E1\ el\ \u00E1rea\ de\ una\ matriz\r\n\ \r\n\ @param\ la\ matriz\r\n\ @return\ el\ \u00E1rea\ de\ la\ matriz\ \r\n
comment31.params=passengers
comment31.target=void\ load(int)
comment31.text=\r\n\ El\ m\u00E9todo\ load\ sentar\u00E1\ a\ unos\ pasajeros\ recibidos\ como\ par\u00E1metros\ en\ sitios\ aleatorios\r\n\ \r\n\ @param,\ el\ n\u00FAmero\ de\ pasajeros\ a\ sentar\r\n
comment4.params=seats
comment4.target=void\ setSeats(Person[][])
comment4.text=\r\n\ Modifica\ el\ valor\ del\ atributo\ seats\ (crea\ una\ matriz\ con\ x\ filas\ y\ columnas)\r\n\ \r\n\ @param\ seats,\ nueva\ matriz\ de\ asientos\ \r\n
comment5.params=
comment5.target=int\ getFirstRows()
comment5.text=\r\n\ Retorna\ el\ valor\ almacenado\ en\ el\ atributo\ firstRows\r\n\ \r\n\ @return\ el\ valor\ almacenado\ en\ el\ atributo\r\n
comment6.params=
comment6.target=int\ getStandardRows()
comment6.text=\r\n\ Retorna\ el\ valor\ almacenado\ en\ el\ atributo\ standardRows\r\n\ \r\n\ @return\ el\ valor\ almacenado\ en\ el\ atributo\r\n
comment7.params=row\ column
comment7.target=Person\ getSeat(int,\ int)
comment7.text=\r\n\ Retorna\ la\ persona\ sentada\ (en\ la\ matriz\ bidimensional\ seats)\r\n\ mediante\ una\ posicion\ en\ las\ filas\ y\ en\ las\ columnas\ como\ par\u00E1metros\r\n\ \r\n\ @param\ row,\ n\u00FAmero\ de\ fila\ del\ asiento\ de\ la\ persona\ a\ buscar\r\n\ @param\ column,\ n\u00FAmero\ de\ columna\ del\ asiento\ de\ la\ persona\ a\ buscar\r\n\ @return\ la\ persona\ que\ ocupa\ el\ asiento\ seleccionado\r\n
comment8.params=
comment8.target=int\ getColumns()
comment8.text=\r\n\ Retorna\ el\ n\u00FAmero\ de\ columnas\ de\ la\ matriz\r\n\ \r\n\ @return\ el\ n\u00FAmero\ de\ columnas\ de\ la\ matriz\r\n
comment9.params=
comment9.target=int\ getRows()
comment9.text=\r\n\ Retorna\ el\ n\u00FAmero\ de\ filas\ de\ la\ matriz\r\n\ \r\n\ @return\ el\ n\u00FAmero\ de\ filas\ de\ la\ matriz\r\n
numComments=32
