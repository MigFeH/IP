#BlueJ class context
comment0.target=PlaneTest
comment0.text=\r\n\ The\ test\ class\ PlaneTest.\r\n\r\n\ @author\ \ Miguel\r\n\ @version\ 6-10-21\r\n
comment1.params=
comment1.target=void\ testPlaneWithoutParams()
comment1.text=\r\n\ Pruebas\ del\ constructor\ por\ defecto\r\n\ \r\n\ Piloto\ \=\ null\r\n\ Identificador\ 'A'\r\n\ Combustible\ 0\r\n
comment10.params=
comment10.target=void\ testAccelerateWithLowerXSpeed()
comment10.text=\r\n\ Prueba\ 4\ del\ m\u00E9todo\ accelerate\r\n\ Que\ al\ menos\ una\ de\ las\ dos\ velocidades\ est\u00E9\ por\ debajo\ del\ intervalo\ (velocidad\ x)\r\n
comment11.params=
comment11.target=void\ testAccelerateWithLowerYSpeed()
comment11.text=\r\n\ Prueba\ 5\ del\ m\u00E9todo\ accelerate\r\n\ Que\ al\ menos\ una\ de\ las\ dos\ velocidades\ est\u00E9\ por\ debajo\ del\ intervalo\ (velocidad\ y)\r\n
comment12.params=
comment12.target=void\ testAccelerateWithIcorrectSpeeds()
comment12.text=\r\n\ Prueba\ 6\ del\ m\u00E9todo\ accelerate\r\n\ Que\ ambas\ velocidades\ est\u00E9n\ fuera\ de\ sus\ intervalos\r\n
comment13.params=
comment13.target=void\ testFlyWithCorrectParams()
comment13.text=\r\n\ Prueba\ 1\ del\ m\u00E9todo\ fly\r\n\ Que\ la\ posici\u00F3n\ x\ y\ la\ posici\u00F3n\ y\ sean\ correctas\ (true)\r\n
comment14.params=
comment14.target=void\ testFlyWithWrongYPosition()
comment14.text=\r\n\ Prueba\ 2\ del\ m\u00E9todo\ fly\r\n\ Que\ la\ posici\u00F3n\ x\ sea\ correcta\ y\ la\ posici\u00F3n\ y\ no\ sea\ correcta\ (excepci\u00F3n)\r\n
comment15.params=
comment15.target=void\ testFlyWithWrongXPosition()
comment15.text=\r\n\ Prueba\ 3\ del\ m\u00E9todo\ fly\r\n\ Que\ la\ posici\u00F3n\ x\ no\ sea\ correcta\ y\ la\ posici\u00F3n\ y\ sea\ correcta\ (excepci\u00F3n)\r\n
comment16.params=
comment16.target=void\ testFlyWithIncorrectParams()
comment16.text=\r\n\ Prueba\ 4\ del\ m\u00E9todo\ fly\r\n\ Que\ la\ posici\u00F3n\ x\ y\ la\ posici\u00F3n\ y\ sean\ incorrectas\ (excepci\u00F3n)\r\n
comment17.params=
comment17.target=void\ testToStringWithPilot()
comment17.text=\r\n\ Prueba\ 1\ del\ m\u00E9todo\ toString\r\n\ Con\ piloto\ asignado\r\n
comment18.params=
comment18.target=void\ testToStringWithNonPilot()
comment18.text=\r\n\ Prueba\ 2\ del\ m\u00E9todo\ toString\r\n\ Sin\ piloto\ asignado\r\n
comment19.params=
comment19.target=void\ testFlyRight2()
comment2.params=
comment2.target=void\ testPlaneWithPilot()
comment2.text=\r\n\ 1-Piloto\ cualquiera\r\n
comment20.params=
comment20.target=void\ testToStringWithoutPilot()
comment3.params=
comment3.target=void\ testPlaneWithoutPilot()
comment3.text=\r\n\ 2-Recibo\ null\r\n
comment4.params=
comment4.target=void\ testConstructorWithOnlyPilot()
comment4.text=\r\n\ Prueba\ del\ constructor\ Plane\ con\ pilot1\ como\ \u00FAnico\ par\u00E1metro\r\n
comment5.params=
comment5.target=void\ testConstructorWithOnlyIdentifier()
comment5.text=\r\n\ Prueba\ del\ constructor\ Plane\ con\ Identifier\ como\ \u00FAnico\ par\u00E1metro\r\n
comment6.params=
comment6.target=void\ testConstructorWithOnlyFuel()
comment6.text=\r\n\ Prueba\ del\ constructor\ Plane\ con\ Fuel\ como\ \u00FAnico\ par\u00E1metro\r\n
comment7.params=
comment7.target=void\ testAccelerateWithCorrectSpeeds()
comment7.text=\r\n\ Prueba\ 1\ del\ m\u00E9todo\ accelerate\r\n\ Que\ la\ velocidad\ tanto\ de\ x\ como\ de\ y\ est\u00E9\ dentro\ de\ sus\ intervalos\r\n
comment8.params=
comment8.target=void\ testAccelerateWithHigherXSpeed()
comment8.text=\r\n\ Prueba\ 2\ del\ m\u00E9todo\ accelerate\r\n\ Que\ al\ menos\ una\ de\ las\ dos\ velocidades\ est\u00E9\ por\ encima\ del\ intervalo\ (velocidad\ x)\r\n
comment9.params=
comment9.target=void\ testAccelerateWithHigherYSpeed()
comment9.text=\r\n\ Prueba\ 3\ del\ m\u00E9todo\ accelerate\r\n\ Que\ al\ menos\ una\ de\ las\ dos\ velocidades\ est\u00E9\ por\ encima\ del\ intervalo\ (velocidad\ y)\r\n
numComments=21
