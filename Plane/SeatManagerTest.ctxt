#BlueJ class context
comment0.target=SeatManagerTest
comment0.text=\r\n\ The\ test\ class\ SeatManagerTest.\r\n\r\n\ @author\ Miguel\r\n\ @version\ 24-11-21\r\n
comment1.params=
comment1.target=void\ testSeatManagerBothOk()
comment1.text=\r\n\ Prueba\ 1\ del\ constructor\ con\ dos\ par\u00E1metros\r\n\ Ambos\ par\u00E1metros\ dentro\ de\ los\ l\u00EDmites\r\n
comment10.params=
comment10.target=void\ testBookSeatWithIncorrectRow()
comment10.text=\r\n\ Prueba\ 3\ del\ m\u00E9todo\ bookSeat\r\n\ Que\ el\ n\u00FAmero\ de\ la\ fila\ en\ la\ que\ se\ le\ asigna\ el\ asiento\ al\ pasajero\ est\u00E9\ fuera\ de\ rango\ (excepci\u00F3n)\r\n
comment11.params=
comment11.target=void\ testBookSeatWithNegativeColumn()
comment11.text=\r\n\ Prueba\ 4\ del\ m\u00E9todo\ bookSeat\r\n\ Que\ el\ n\u00FAmero\ de\ la\ columna\ en\ la\ que\ se\ le\ asigna\ el\ asiento\ al\ pasajero\ sea\ negativo\ (excepci\u00F3n)\r\n
comment12.params=
comment12.target=void\ testBookSeatWithIncorrectColumn()
comment12.text=\r\n\ Prueba\ 5\ del\ m\u00E9todo\ bookSeat\r\n\ Que\ el\ n\u00FAmero\ de\ la\ columna\ en\ la\ que\ se\ le\ asigna\ el\ asiento\ al\ pasajero\ est\u00E9\ fuera\ de\ rango\ (excepci\u00F3n)\r\n
comment13.params=
comment13.target=void\ testBookSeatWithOcuped()
comment13.text=\r\n\ Prueba\ 6\ del\ m\u00E9todo\ bookSeat\r\n\ Que\ el\ asiento\ al\ que\ se\ le\ va\ a\ asignar\ al\ pasajero\ est\u00E9\ ya\ ocupado\ (false)\r\n
comment14.params=
comment14.target=void\ testBookSeatWithFreeSeat()
comment14.text=\r\n\ Prueba\ 7\ del\ m\u00E9todo\ bookSeat\r\n\ Que\ el\ asiento\ al\ que\ se\ le\ va\ a\ asignar\ al\ pasajero\ no\ est\u00E9\ ocupado\ (true)\r\n
comment15.params=
comment15.target=void\ testReleaseSeatWithCorrectParams()
comment15.text=\r\n\ Prueba\ 1\ del\ m\u00E9todo\ releaseSeat\r\n\ Que\ tanto\ la\ fila\ como\ la\ columna\ que\ se\ introducen\ como\ par\u00E1metros,\ sean\ v\u00E1lidos\r\n
comment16.params=
comment16.target=void\ testReleaseSeatWithNegativeParams()
comment16.text=\r\n\ Prueba\ 2\ del\ m\u00E9todo\ releaseSeat\r\n\ Que\ tanto\ la\ fila\ como\ la\ columna\ que\ se\ introducen\ como\ par\u00E1metros,\ sean\ negativos\ (excepci\u00F3n)\r\n
comment17.params=
comment17.target=void\ testReleaseSeatWithTooHighParams()
comment17.text=\r\n\ Prueba\ 3\ del\ m\u00E9todo\ releaseSeat\r\n\ Que\ tanto\ la\ fila\ como\ la\ columna\ que\ se\ introducen\ como\ par\u00E1metros,\ est\u00E9n\ por\ encima\ de\ los\ l\u00EDmites\ (excepci\u00F3n)\r\n
comment18.params=
comment18.target=void\ testReleaseSeatWithNegativeRow()
comment18.text=\r\n\ Prueba\ 4\ del\ m\u00E9todo\ releaseSeat\r\n\ Que\ la\ fila\ que\ se\ introduce\ como\ par\u00E1metro\ sea\ negativa\ y\ la\ columna\ sea\ v\u00E1lida\ (excepci\u00F3n)\r\n
comment19.params=
comment19.target=void\ testReleaseSeatWithTooHighRow()
comment19.text=\r\n\ Prueba\ 5\ del\ m\u00E9todo\ releaseSeat\r\n\ Que\ la\ fila\ que\ se\ introduce\ como\ par\u00E1metro\ est\u00E9\ por\ encima\ de\ los\ l\u00EDmites\ y\ la\ columna\ sea\ v\u00E1lida\ (excepci\u00F3n)\r\n
comment2.params=
comment2.target=void\ testSeatManagerBothOnLowerLimits()
comment2.text=\r\n\ Prueba\ 2\ del\ constructor\ con\ dos\ par\u00E1metros\r\n\ Ambos\ par\u00E1metros\ est\u00E9n\ en\ l\u00EDmite\ inferior\r\n
comment20.params=
comment20.target=void\ testReleaseSeatWithNegativeColumn()
comment20.text=\r\n\ Prueba\ 6\ del\ m\u00E9todo\ releaseSeat\r\n\ Que\ la\ columna\ que\ se\ introduce\ como\ par\u00E1metro\ sea\ negativa\ y\ la\ fila\ sea\ v\u00E1lida\ (excepci\u00F3n)\r\n
comment21.params=
comment21.target=void\ testReleaseSeatWithTooHighColumn()
comment21.text=\r\n\ Prueba\ 7\ del\ m\u00E9todo\ releaseSeat\r\n\ Que\ la\ columna\ que\ se\ introduce\ como\ par\u00E1metro\ est\u00E9\ por\ encima\ de\ los\ l\u00EDmites\ y\ la\ fila\ sea\ v\u00E1lida\ (excepci\u00F3n)\r\n
comment22.params=
comment22.target=void\ testOldestPassengerWithoutPassengers()
comment22.text=\r\n\ Prueba\ 1\ del\ m\u00E9todo\ oldestPassenger\ \r\n\ Que\ no\ haya\ pasajeros\ (null)\r\n
comment23.params=
comment23.target=void\ testOldestPassengerWithOldestPassenger()
comment23.text=\r\n\ Prueba\ 2\ del\ m\u00E9todo\ oldestPassenger\ \r\n\ Que\ haya\ pasajero\ con\ la\ mayor\ edad\r\n
comment24.params=
comment24.target=void\ testOldestPassengerWithManyPassengers()
comment24.text=\r\n\ Prueba\ 3\ del\ m\u00E9todo\ oldestPassenger\ \r\n\ Que\ haya\ varios\ pasajeros\r\n
comment25.params=
comment25.target=void\ testOldestPassengerWithManyPassengersWithSameAge()
comment25.text=\r\n\ Prueba\ 4\ del\ m\u00E9todo\ oldestPassenger\ \r\n\ Que\ haya\ varios\ pasajeros\ con\ la\ misma\ edad\ (devuelve\ el\ primer\ pasajero\ con\ m\u00E1s\ edad)\r\n
comment26.params=
comment26.target=void\ testNumberOfFreeSeatsWitoutFree()
comment26.text=\r\n\ Prueba\ 1\ del\ m\u00E9todo\ numberOfFreeSeats\r\n\ Que\ no\ haya\ asientos\ libres\ (contador\ \=\ 0)\r\n
comment27.params=
comment27.target=void\ testNumberOfFreeSeats()
comment27.text=\r\n\ Prueba\ 2\ del\ m\u00E9todo\ numberOfFreeSeats\r\n\ Que\ haya\ asientos\ libres\ (contados\ >\ 0)\r\n
comment28.params=
comment28.target=void\ testNumberOfFreeSeatsInNegativeRow()
comment28.text=\r\n\ Prueba\ 3\ del\ m\u00E9todo\ numberOfFreeSeats\r\n\ Que\ la\ fila\ a\ revisar\ el\ n\u00FAmero\ de\ asientos\ libres\ sea\ negativa\r\n
comment29.params=
comment29.target=void\ testNumberOfFreeSeatsInTooHighRow()
comment29.text=\r\n\ Prueba\ 4\ del\ m\u00E9todo\ numberOfFreeSeats\r\n\ Que\ la\ fila\ a\ revisar\ el\ n\u00FAmero\ de\ asientos\ libres\ est\u00E9\ por\ encima\ de\ los\ l\u00EDmites\ de\ la\ matriz\r\n
comment3.params=
comment3.target=void\ testSeatManagerBothOnHigherLimits()
comment3.text=\r\n\ Prueba\ 3\ del\ constructor\ con\ dos\ par\u00E1metros\r\n\ Ambos\ par\u00E1metros\ est\u00E9n\ en\ l\u00EDmite\ superior\r\n
comment30.params=
comment30.target=void\ testPrint()
comment30.text=\r\n\ Prueba\ del\ m\u00E9todo\ print\r\n\ Matriz\ con\ asientos\ libres\ y\ ocupados\r\n
comment31.params=
comment31.target=void\ testRemoveMalesWithNullParam()
comment31.text=\r\n\ Prueba\ 1\ del\ m\u00E9todo\ removeMales\r\n\ Que\ la\ lista\ que\ recibe\ como\ par\u00E1metro\ sea\ null\ (excepci\u00F3n)\r\n
comment32.params=
comment32.target=void\ testRemoveMalesWithNullElements()
comment32.text=\r\n\ Prueba\ 2\ del\ m\u00E9todo\ removeMales\r\n\ Que\ la\ lista\ que\ recibe\ como\ par\u00E1metro\ sea\ de\ elementos\ null\ (excepci\u00F3n)\r\n
comment33.params=
comment33.target=void\ testRemoveMalesWithFemaleElements()
comment33.text=\r\n\ Prueba\ 3\ del\ m\u00E9todo\ removeMales\r\n\ Que\ no\ haya\ hombres\ en\ la\ lista\ par\u00E1metro\ (retornar\u00EDa\ 0)\r\n
comment34.params=
comment34.target=void\ testRemoveMalesWithGenderElements()
comment34.text=\r\n\ Prueba\ 4\ del\ m\u00E9todo\ removeMales\r\n\ Que\ haya\ hombres\ en\ la\ lista\ par\u00E1metro\ (se\ har\u00E1\ con\ 7\ hombres)\r\n
comment35.params=
comment35.target=void\ testChildrenPassengersWithoutChildrens()
comment35.text=\r\n\ Prueba\ 1\ del\ m\u00E9todo\ childrenPassengers\r\n\ Que\ no\ haya\ ni\u00F1os\ en\ el\ avi\u00F3n\ (retorna\ una\ matriz\ vac\u00EDa)\r\n
comment36.params=
comment36.target=void\ testChildrenPassengersWithChildrens()
comment36.text=\r\n\ Prueba\ 2\ del\ m\u00E9todo\ childrenPassengers\r\n\ Que\ haya\ ni\u00F1os\ en\ el\ avi\u00F3n\r\n
comment37.params=
comment37.target=void\ testGetNumPaxWithArea1()
comment37.text=\r\n\ Prueba\ 1\ del\ m\u00E9todo\ getNumPax\r\n\ Que\ se\ elija\ el\ \u00E1rea\ 1\r\n
comment38.params=
comment38.target=void\ testGetNumPaxWithArea2()
comment38.text=\r\n\ Prueba\ 2\ del\ m\u00E9todo\ getNumPax\r\n\ Que\ se\ elija\ el\ \u00E1rea\ 2\r\n
comment39.params=
comment39.target=void\ testGetNumPaxWithArea3()
comment39.text=\r\n\ Prueba\ 3\ del\ m\u00E9todo\ getNumPax\r\n\ Que\ se\ elija\ el\ \u00E1rea\ 3\r\n
comment4.params=
comment4.target=void\ testSeatManagerWithWrongLowerFirst()
comment4.text=\r\n\ Prueba\ 4\ del\ constructor\ con\ dos\ par\u00E1metros\r\n\ First\ fuera\ de\ l\u00EDmite\ por\ debajo\ y\ standard\ correcto\r\n
comment40.params=
comment40.target=void\ testGetNumPaxBySectionWithNegativeRow1()
comment40.text=\r\n\ Prueba\ 1\ del\ m\u00E9todo\ getNumPaxBySection\r\n\ Que\ la\ fila\ del\ primer\ elemento\ sea\ negativa\ y\ lo\ dem\u00E1s\ correcto\ (excepci\u00F3n)\r\n
comment41.params=
comment41.target=void\ testGetNumPaxBySectionWithNegativeColumn1()
comment41.text=\r\n\ Prueba\ 2\ del\ m\u00E9todo\ getNumPaxBySection\r\n\ Que\ la\ columna\ del\ primer\ elemento\ sea\ negativa\ y\ lo\ dem\u00E1s\ correcto\ (excepci\u00F3n)\r\n
comment42.params=
comment42.target=void\ testGetNumPaxBySectionWithNegativeRow2()
comment42.text=\r\n\ Prueba\ 3\ del\ m\u00E9todo\ getNumPaxBySection\r\n\ Que\ la\ fila\ del\ segundo\ elemento\ sea\ negativa\ y\ lo\ dem\u00E1s\ correcto\ (excepci\u00F3n)\r\n
comment43.params=
comment43.target=void\ testGetNumPaxBySectionWithNegativeColumn2()
comment43.text=\r\n\ Prueba\ 4\ del\ m\u00E9todo\ getNumPaxBySection\r\n\ Que\ la\ columna\ del\ segundo\ elemento\ sea\ negativa\ y\ lo\ dem\u00E1s\ correcto\ (excepci\u00F3n)\r\n
comment44.params=
comment44.target=void\ testGetNumPaxBySectionWithRow1MoreHigherThanRow2()
comment44.text=\r\n\ Prueba\ 5\ del\ m\u00E9todo\ getNumPaxBySection\r\n\ Que\ la\ fila\ del\ primer\ elemento\ sea\ mayor\ que\ la\ fila\ del\ segundo\ elemento\ (excepci\u00F3n)\r\n
comment45.params=
comment45.target=void\ testGetNumPaxBySectionWithColumn1MoreHigherThanColumn2()
comment45.text=\r\n\ Prueba\ 6\ del\ m\u00E9todo\ getNumPaxBySection\r\n\ Que\ la\ columna\ del\ primer\ elemento\ sea\ mayor\ que\ la\ columna\ del\ segundo\ elemento\ (excepci\u00F3n)\r\n
comment46.params=
comment46.target=void\ testGetNumPaxBySectionWithTooHighRow1()
comment46.text=\r\n\ Prueba\ 7\ del\ m\u00E9todo\ getNumPaxBySection\r\n\ Que\ la\ fila\ del\ primer\ elemento\ est\u00E9\ fuera\ de\ los\ l\u00EDmites\ (excepci\u00F3n)\r\n
comment47.params=
comment47.target=void\ testGetNumPaxBySectionWithTooHighColumn1()
comment47.text=\r\n\ Prueba\ 8\ del\ m\u00E9todo\ getNumPaxBySection\r\n\ Que\ la\ columna\ del\ primer\ elemento\ est\u00E9\ fuera\ de\ los\ l\u00EDmites\ (excepci\u00F3n)\r\n
comment48.params=
comment48.target=void\ testGetNumPaxBySectionWithTooHighRow2()
comment48.text=\r\n\ Prueba\ 9\ del\ m\u00E9todo\ getNumPaxBySection\r\n\ Que\ la\ fila\ del\ segundo\ elemento\ est\u00E9\ fuera\ de\ los\ l\u00EDmites\ (excepci\u00F3n)\r\n
comment49.params=
comment49.target=void\ testGetNumPaxBySectionWithTooHighColumn2()
comment49.text=\r\n\ Prueba\ 10\ del\ m\u00E9todo\ getNumPaxBySection\r\n\ Que\ la\ columna\ del\ segundo\ elemento\ est\u00E9\ fuera\ de\ los\ l\u00EDmites\ (excepci\u00F3n)\r\n
comment5.params=
comment5.target=void\ testSeatManagerWithWrongLowerStandard()
comment5.text=\r\n\ Prueba\ 5\ del\ constructor\ con\ dos\ par\u00E1metros\r\n\ Standard\ fuera\ del\ l\u00EDmite\ por\ debajo\ y\ first\ correcto\r\n
comment50.params=
comment50.target=void\ testGetNumPaxBySectionWithNormalParams()
comment50.text=\r\n\ Prueba\ 11\ del\ m\u00E9todo\ getNumPaxBySection\r\n\ Que\ todos\ los\ par\u00E1metros\ sean\ v\u00E1lidos\r\n
comment51.params=
comment51.target=void\ testLoadPaxWithExcesivePassengers()
comment51.text=\r\n\ Prueba\ 1\ del\ m\u00E9todo\ loadPax\r\n\ Que\ el\ n\u00FAmero\ de\ pasajeros\ exceda\ la\ capacidad\ m\u00E1xima\ de\ asientos\ del\ avi\u00F3n\ (excepci\u00F3n)\r\n
comment52.params=
comment52.target=void\ testLoadPaxWithNegativePassengers()
comment52.text=\r\n\ Prueba\ 2\ del\ m\u00E9todo\ loadPax\r\n\ Que\ el\ n\u00FAmero\ de\ pasajeros\ sea\ negativo\ (excepci\u00F3n)\r\n
comment53.params=
comment53.target=void\ testLoadPaxWithNormalNumberOfPassengers()
comment53.text=\r\n\ Prueba\ 3\ del\ m\u00E9todo\ loadPax\r\n\ Que\ el\ n\u00FAmero\ de\ pasajeros\ sea\ menor\ que\ la\ capacidad\ m\u00E1xima\ del\ avi\u00F3n\r\n
comment54.params=
comment54.target=void\ testLoadPaxWithMuchPax()
comment54.text=\r\n\ Prueba\ 4\ del\ m\u00E9todo\ loadPax\r\n\ Que\ el\ n\u00FAmero\ de\ pasajeros\ sea\ el\ m\u00E1ximo\r\n
comment55.params=
comment55.target=void\ testGetYoungestPeopleWithoutPassengers()
comment55.text=\r\n\ Prueba\ 1\ del\ m\u00E9todo\ getYoungestPeople\r\n\ Que\ no\ haya\ pasajeros\ (excepci\u00F3n)\r\n
comment56.params=
comment56.target=void\ testGetYoungestPeopleWithPassengers()
comment56.text=\r\n\ Prueba\ 2\ del\ m\u00E9todo\ getYoungestPeople\r\n\ Que\ haya\ pasajeros\r\n
comment57.params=
comment57.target=void\ testLoadPassengersWithNegativeNumberOfPassengers()
comment57.text=\r\n\ Prueba\ del\ m\u00E9todo\ loadPassengers\r\n\ Que\ el\ n\u00FAmero\ de\ pasajeros\ sea\ negativo\ (excepci\u00F3n)\r\n
comment6.params=
comment6.target=void\ testSeatManagerWithWrongHigherFirst()
comment6.text=\r\n\ Prueba\ 6\ del\ constructor\ con\ dos\ par\u00E1metros\r\n\ First\ fuera\ de\ l\u00EDmite\ por\ encima\ y\ standard\ correcto\r\n
comment7.params=
comment7.target=void\ testSeatManagerWithWrongHigherStandard()
comment7.text=\r\n\ Prueba\ 7\ del\ constructor\ con\ dos\ par\u00E1metros\r\n\ Standard\ fuera\ del\ l\u00EDmite\ por\ encima\ y\ first\ correcto\r\n
comment8.params=
comment8.target=void\ testBookSeatWithNullPassenger()
comment8.text=\r\n\ Prueba\ 1\ del\ m\u00E9todo\ bookSeat\r\n\ Que\ el\ pasajero\ sea\ null\ (excepci\u00F3n)\r\n
comment9.params=
comment9.target=void\ testBookSeatWithNegativeRow()
comment9.text=\r\n\ Prueba\ 2\ del\ m\u00E9todo\ bookSeat\r\n\ Que\ el\ n\u00FAmero\ de\ la\ fila\ en\ la\ que\ se\ le\ asigna\ el\ asiento\ al\ pasajero\ sea\ negativo\ (excepci\u00F3n)\r\n
numComments=58
