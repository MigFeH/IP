#BlueJ class context
comment0.target=FlySimulator
comment0.text=\r\n\ Simulador\ de\ vuelo\ para\ los\ aviones.\r\n\ \r\n\ @author\ Miguel\r\n\ @version\ 15-12-21\r\n
comment1.params=
comment1.target=FlySimulator()
comment1.text=\r\n\ Constructor\ \r\n\ Crea\ la\ lista\ y\ el\ mapa\r\n\ Rellena\ el\ mapa\ con\ virgulillas\ (posiciones\ libres)\r\n
comment10.params=
comment10.target=void\ updateMap()
comment10.text=\r\n\ Actualiza\ el\ mapa\ del\ radar\r\n\ \ \ \ \ \ Inicializa\ el\ mapa\ a\ vac\u00EDo\ \r\n\ \ \ \ \ \ Recorre\ lista\ de\ aviones\r\n\ \ \ \ \ \ \ \ \ \ Si\ est\u00E1\ vac\u00EDa\ la\ posici\u00F3n\ del\ avi\u00F3n,\ se\ asignar\u00E1\ el\ identificador\ del\ avi\u00F3n\ de\ la\ lista\r\n\ \ \ \ \ \ \ \ \ \ Si\ ya\ est\u00E1\ ocupada\ se\ asignar\u00E1\ colisi\u00F3n\ \r\n\ \ \ \ \ \ \ \ \ \ \r\n
comment11.params=
comment11.target=void\ removeAndPrintCollisions()
comment11.text=\r\n\ \r\n\ Borra\ e\ imprime\ los\ aviones\ que\ colisionan\ \r\n\ (Los\ que\ tienen\ igual\ posici\u00F3n\ y\ en\ matriz\ se\ indica\ %)\r\n\ \ Recorre\ matriz\ y\ si\ hay\ un\ %\ \r\n\ \ \ \ \ \ busca\ todos\ los\ aviones\ con\ esa\ posici\u00F3n\ \r\n\ \ \ \ \ \ \ \ \ \ Los\ borra\ y\ los\ guarda\ en\ una\ lista\r\n\ \ \ \ \ \ Imprime\ la\ lista\ de\ borrados\ para\ esa\ posici\u00F3n\r\n\ \r\n
comment12.params=row\ column
comment12.target=java.util.ArrayList\ removePlanesInPosition(int,\ int)
comment12.text=\r\n\ Elimina\ de\ la\ lista\ de\ aviones\ todos\ los\ que\ tengan\ posici\u00F3n\ row\ column\r\n\ Y\ los\ devuelve\ en\ una\ lista\r\n\ @param\ row,\ fila\ en\ la\ matriz\r\n\ @param\ column,\ columna\ en\ la\ matriz\r\n\ @return\ ArrayList\ con\ aviones\ borrados\r\n
comment13.params=collisionedPlanes
comment13.target=void\ printCollision(java.util.ArrayList)
comment13.text=\r\n\ @param\ ArrayList<Plane>\ lista\ de\ aviones\ a\ imprimir\r\n\ \r\n\ Imprime\ los\ datos\ (toString)\ de\ todos\ los\ aviones\ de\ la\ lista\ \r\n
comment14.params=condition\ msg
comment14.target=void\ checkParam(boolean,\ java.lang.String)
comment14.text=\r\n\ Si\ no\ se\ cumple\ la\ condici\u00F3n\ lanza\ RuntimeException\ con\ el\ mensaje\ indicado\r\n\ @param\ condition\r\n\ @param\ msg\ mensaje\r\n
comment15.params=
comment15.target=Plane[]\ getPlanes()
comment15.text=\r\n\ Devuelve\ <<UNA\ COPIA>>\ de\ la\ lista\ de\ aviones\r\n\ @return\ array\ con\ la\ lista\ de\ aviones\r\n
comment16.params=row\ column
comment16.target=char\ getPosition(int,\ int)
comment16.text=\r\n\ Devuelve\ el\ contenido\ de\ una\ posici\u00F3n\ del\ mapa\r\n\ @return\ identificador,\ %\ o\ ~\ \r\n
comment2.params=
comment2.target=void\ resetMap()
comment3.params=plane
comment3.target=void\ addPlane(Plane)
comment3.text=\r\n\ A\u00F1ade\ un\ avi\u00F3n\ al\ sistema\ de\ control\r\n\ \r\n\ No\ ser\u00E1n\ v\u00E1lidos\ y\ provocar\u00E1n\ excepci\u00F3n\ \r\n\ \ \ \ \ \ aviones\ que\ est\u00E9n\ localizados\ en\ posiciones\ del\ mapa\ ya\ ocupadas,\ \r\n\ \ \ \ \ \ ni\ aviones\ con\ el\ un\ identificador\ que\ ya\ existe.\ \r\n\ \r\n\ Se\ a\u00F1ade\ el\ avi\u00F3n\ a\ la\ lista\ de\ a\ viones\ \r\n\ y\ se\ modifica\ el\ mapa\ para\ que\ aparezca\ el\ identificador\ del\ avi\u00F3n\r\n\ \r\n\ @param\ plane,\ avi\u00F3n\ a\ a\u00F1adir\r\n\ \r\n
comment4.params=plane
comment4.target=boolean\ hasSameIdentifier(Plane)
comment4.text=\r\n\ @return\ true\ si\ hay\ un\ avi\u00F3n\ en\ la\ lista\ con\ el\ mismo\ identificador\ que\ el\ \r\n\ avi\u00F3n\ recibido\ como\ par\u00E1metro\r\n\ @param\ plane\ \r\n
comment5.params=plane
comment5.target=boolean\ isFreePosition(Plane)
comment5.text=\r\n\ Comprueba\ si\ la\ posici\u00F3n\ en\ la\ matriz\ correspondiente\ \r\n\ a\ la\ posici\u00F3n\ del\ avi\u00F3n\ que\ recibe,\ est\u00E1\ vac\u00EDa\r\n\ @param\ plane\r\n\ @return\ true\ si\ est\u00E1\ libre\r\n
comment6.params=
comment6.target=void\ printMap()
comment6.text=\r\n\ Imprime\ el\ mapa\ (radar)\ con\ todos\ los\ aviones\r\n\ Se\ imprie\ el\ identificador\ o\ la\ virgulilla\r\n
comment7.params=
comment7.target=void\ printHeader()
comment8.params=
comment8.target=void\ animate()
comment8.text=\r\n\ Simula\ el\ movimiento\ de\ todos\ los\ aviones\ una\ posici\u00F3n\r\n\ Implica\ volar\ los\ aviones\ y\ actualizar\ el\ mapa\r\n
comment9.params=
comment9.target=void\ flyPlanes()
comment9.text=\r\n\ Hace\ que\ todos\ los\ aviones\ de\ la\ lista\ aviones\ vuelen\r\n
numComments=17
