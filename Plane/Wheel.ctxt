#BlueJ class context
comment0.target=Wheel
comment0.text=\r\n\ Definici\u00F3n\ de\ las\ ruedas\ del\ avi\u00F3n\r\n\ \r\n\ @author\ Miguel\ \r\n\ @version\ 20-10-21\r\n
comment1.params=
comment1.target=Wheel()
comment1.text=\r\n\ Constructor\ para\ crear\ rueda\ con\ valores\ standard\r\n
comment10.params=condition\ msg
comment10.target=void\ checkParam(boolean,\ java.lang.String)
comment10.text=\r\n\ Valida\ el\ par\u00E1metro.\ Si\ no\ se\ cumple\ la\ condici\u00F3n\r\n\ lanza\ IllegalArgumentException\ con\ mensaje\ recibido\r\n\ @param\ condici\u00F3n\ a\ validar\r\n\ @param\ mensaje\ causa\ del\ error\r\n
comment11.params=
comment11.target=double\ percentage()
comment11.text=\r\n\ Calcula\ el\ porcentaje\ de\ presi\u00F3n\ respecto\ a\ la\ presi\u00F3n\ m\u00E1xima\r\n\ @return\ porcentaje\r\n
comment12.params=
comment12.target=double\ getPercentage()
comment12.text=\r\n\ Retorna\ el\ porcentaje\ de\ presi\u00F3n\ respecto\ a\ la\ presi\u00F3n\ m\u00E1xima\r\n\ @return\ porcentaje\r\n
comment13.params=
comment13.target=java.lang.String\ testToString()
comment13.text=\r\n\ @return\ Devuelve\ OK\ o\ FAIL\ en\ funci\u00F3n\ del\ resultado\ del\ test\r\n
comment2.params=maxPressure\ pressure
comment2.target=Wheel(double,\ double)
comment2.text=\r\n\ Constructor\ para\ crear\ la\ rueda\ con\ las\ presi\u00F3n\ que\ se\ desee\r\n\ \r\n\ @param\ pressi\u00F3n\ m\u00E1xima\r\n\ @param\ presi\u00F3n\ actual\r\n
comment3.params=maxPressure
comment3.target=void\ setMaxPressure(double)
comment3.text=\r\n\ M\u00E9todo\ que\ modifica\ la\ presi\u00F3n\ m\u00E1xima\ de\ la\ rueda\r\n\ \r\n\ @param\ \ nuevo\ valor\ para\ la\ presi\u00F3n\ m\u00E1xima\ (>\=0),\ de\ tipo\ double\ \ \r\n\ \ \r\n
comment4.params=newPressure
comment4.target=void\ setPressure(double)
comment4.text=\r\n\ M\u00E9todo\ que\ modifica\ la\ presi\u00F3n\ actual\r\n\ \r\n\ @param\ \ nuevo\ valor\ para\ la\ presi\u00F3n\ actual\ entre\ [0,maxPressure],\ de\ tipo\ double\r\n
comment5.params=
comment5.target=double\ getMaxPressure()
comment5.text=\r\n\ M\u00E9todo\ que\ devuelve\ la\ presi\u00F3n\ m\u00E1xima\r\n\ \r\n\ @return\ presi\u00F3n\ m\u00E1xima\ que\ puede\ soportar\ la\ rueda,\ de\ tipo\ double\r\n
comment6.params=
comment6.target=double\ getPressure()
comment6.text=\r\n\ \ \ \ /**\r\n\ M\u00E9todo\ que\ devuelve\ la\ presi\u00F3n\ actual\r\n\ \r\n\ @return\ presi\u00F3n\ actual\ que\ puede\ soportar\ la\ rueda,\ de\ tipo\ double\r\n
comment7.params=
comment7.target=boolean\ test()
comment7.text=\r\n\ M\u00E9todo\ qee\ comprueba\ si\ una\ rueda\ est\u00E1\ o\ no\ operativa\r\n\ Est\u00E1\ operativa\ si\ su\ presi\u00F3n\ actual\ es\ mayor\ o\ igual\ que\ el\ 85%\ del\ la\ presi\u00F3n\ m\u00E1xima\r\n\ \r\n\ @return\ true\ si\ la\ rueda\ est\u00E1\ operativa\ y\ false\ si\ no\ lo\ es\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ Devuelve\ el\ estado\ de\ la\ rueda\ con\ el\ siguiente\ formato\:\r\n\ MaxP\:\ 20700,0\ Mb\ -\ Pressure\:\ 19300,0\ Mb\ -\ Percentage\:\ 93,24\ -\ Test\:\ true\r\n\ \r\n\ @return\ estado\ de\ la\ rueda\ con\ el\ formato\ anterior\r\n
comment9.params=
comment9.target=void\ print()
comment9.text=\r\n\ Imprime\ los\ datos\ de\ la\ rueda\ en\ el\ siguiente\ formato\r\n\ \r\n\ Max\ Pressure.......\ 34500,0\ Mb\r\n\ Current\ Pressure...\ 32000,0\ Mb\ (92,75%)\r\n\ Test...............\ OK\ (FAIL,\ si\ fall\u00F3\ el\ test).\u000B\r\n\ \r\n
numComments=14
