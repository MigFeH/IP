#BlueJ class context
comment0.target=LandingGear
comment0.text=\r\n\ Tren\ de\ aterrizaje\ del\ avi\u00F3n\ con\ palanca,\ puntales\ izquierdo,\ derecho\ y\ morro\r\n\ \r\n\ @author\ Miguel\ \r\n\ @version\ 3-11-21\r\n
comment1.params=
comment1.target=LandingGear()
comment1.text=\r\n\ Constructor\ de\ la\ clase\ LandingGear\ con\ lever\ down\ y\ tres\ puntales\r\n
comment10.params=
comment10.target=WheelStrut\ getNose()
comment10.text=\r\n\ Retorna\ el\ valor\ de\ nose\r\n\ \r\n\ @return\ valor\ del\ morro\r\n
comment11.params=action
comment11.target=void\ moveLever(boolean)
comment11.text=\r\n\ Mueve\ la\ palanca\ a\ LEVER_UP\ o\ LEVER_DOWN\r\n\ y\ repliega\ o\ despliega\ los\ puntales\r\n\ \r\n\ @param\ action\ LEVER_UP\ o\ LEVER_DOWN\r\n
comment12.params=
comment12.target=boolean\ test()
comment12.text=\r\n\ El\ m\u00E9todo\ test\ devolver\u00E1\ true\ si\ el\ m\u00E9todo\ test\r\n\ de\ todos\ los\ puntales\ devuelve\ true,\ y\ false,\ en\ otro\ caso\r\n\ \r\n\ @return\ true\ o\ false\ en\ funci\u00F3n\ de\ los\ tests\ de\ los\ puntales\r\n
comment13.params=
comment13.target=void\ print()
comment13.text=\r\n\ El\ m\u00E9todo\ print\ imprimir\u00E1\:\r\n\ \r\n\ Posici\u00F3n\ de\ la\ palanca.\r\n\ Resultado\ de\ ejecutar\ el\ test\ sobre\ el\ tren\ de\ aterrizaje.\r\n\ FAIL\ si\ el\ m\u00E9todo\ test()\ del\ puntal\ devuelve\ false;\ OK\ en\ caso\ contrario\r\n\ ON\ si\ el\ puntal\ est\u00E1\ desplegado;\ OFF\ en\ otro\ caso\ (para\ cada\ puntal).\r\n\ Las\ etiquetas\ a\ usar\ ser\u00E1n\ declaradas\ como\ constantes.\r\n\ \r\n\ Con\ un\ aspecto\ final\ como\ el\ que\ sigue\:\r\n\ Lever..............\ DOWN\ (o\ UP)\r\n\ Test...............\ FAIL\r\n\ \ \ \ ON\r\n\ \ OFF\ ON\r\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\r\n\ El\ m\u00E9todo\ toString\ devolver\u00E1\ el\ estado\ de\ todo\ el\ sistema\r\n\ con\ el\ siguiente\ formato\:\r\n\ \r\n\ Estado\ de\ la\ palanca\ (DOWN\ /\ UP)\r\n\ Estado\ del\ tren\ de\ aterrizaje\ (OK\ /\ FAILURE)\r\n\ Estado\ de\ cada\ puntal\ (strut)\ \r\n\ (ON\ \=\ deployed\ /\ OFF\ \=\ retracted\ /\ PRESS\ \=\ al\ menos\ una\ rueda\ \r\n\ no\ tiene\ suficiente\ presi\u00F3n)\r\n\ \r\n\ Ejemplos\:\r\n\ Lever\:\ UP\ Status\:\ OK\ Nose\:\ ON\ Left\:\ ON\ Right\:\ ON\r\n\ Lever\:\ DOWN\ Status\:\ FAILURE\ Nose\:\ OFF\ Left\:\ OFF\ Right\:\ OFF\r\n
comment15.params=condition\ msg
comment15.target=void\ checkParam(boolean,\ java.lang.String)
comment15.text=\r\n\ El\ m\u00E9todo\ checkParam\ evaluar\u00E1\ una\ condici\u00F3n\ y\ si\ \u00E9sta\r\n\ no\ se\ cumple,\ lanza\ una\ excepci\u00F3n\ con\ un\ mensaje\r\n\ \r\n\ @param\ la\ condici\u00F3n\ a\ evaluar\r\n\ @param\ el\ mensaje\ de\ la\ excepci\u00F3n\r\n
comment16.params=wheelStrut
comment16.target=java.lang.String\ wheelStrutStateAndTest(WheelStrut)
comment17.params=
comment17.target=java.lang.String\ leverStatus()
comment17.text=\r\n\ El\ m\u00E9todo\ leverStatus\ devuelve\ un\ String\ en\ funci\u00F3n\r\n\ del\ estado\ de\ la\ palanca\r\n\ \r\n\ UP\ cuando\ sea\ true\r\n\ DOWN\ cuando\ sea\ false\r\n\ \r\n\ @return\ UP\ o\ DOWN\r\n
comment18.params=
comment18.target=java.lang.String\ testToString()
comment18.text=\r\n\ El\ m\u00E9todo\ testToString\ devolver\u00E1\ OK\ o\ FAILURE\ en\ funci\u00F3n\r\n\ del\ resultado\ del\ test\r\n\ \r\n\ @return\ OK\ o\ FAILURE\r\n
comment19.params=
comment19.target=java.lang.String\ leftTestToString()
comment19.text=\r\n\ El\ m\u00E9todo\ leftTestToString\ devolver\u00E1\ OK\ u\ OFF\ en\ funci\u00F3n\r\n\ del\ resultado\ del\ puntal\ izquierdo\r\n\ \r\n\ @return\ ON\ u\ OFF\r\n
comment2.params=left\ right\ nose
comment2.target=LandingGear(WheelStrut,\ WheelStrut,\ WheelStrut)
comment2.text=\r\n\ Constructor\ de\ la\ clase\ LandingGear\ con\ los\ puntales\ como\ par\u00E1metros\r\n\ \r\n\ @param\ left\r\n\ @param\ right\r\n\ @param\ nose\r\n\ \r\n\ Palanca\ en\ posici\u00F3n\ baja\ y\ los\ tres\ puntales\ desplegados\r\n
comment20.params=
comment20.target=java.lang.String\ rightTestToString()
comment20.text=\r\n\ El\ m\u00E9todo\ rightTestToString\ devolver\u00E1\ OK\ u\ OFF\ en\ funci\u00F3n\r\n\ del\ resultado\ del\ puntal\ derecho\r\n\ \r\n\ @return\ ON\ u\ OFF\r\n
comment21.params=
comment21.target=java.lang.String\ noseTestToString()
comment21.text=\r\n\ El\ m\u00E9todo\ noseTestToString\ devolver\u00E1\ OK\ u\ OFF\ en\ funci\u00F3n\r\n\ del\ resultado\ del\ puntal\ del\ morro\r\n\ \r\n\ @return\ ON\ u\ OFF\r\n
comment3.params=lever
comment3.target=void\ setLever(boolean)
comment3.text=\r\n\ Modifica\ el\ valor\ del\ atributo\ lever\r\n\ \r\n\ @param\ nuevo\ valor\r\n
comment4.params=left
comment4.target=void\ setLeft(WheelStrut)
comment4.text=\r\n\ Modifica\ el\ valor\ del\ atributo\ left\r\n\ \r\n\ @param\ nuevo\ valor\r\n
comment5.params=right
comment5.target=void\ setRight(WheelStrut)
comment5.text=\r\n\ Modifica\ el\ valor\ del\ atributo\ right\r\n\ \r\n\ @param\ nuevo\ valor\r\n
comment6.params=nose
comment6.target=void\ setNose(WheelStrut)
comment6.text=\r\n\ Modifica\ el\ valor\ del\ atributo\ nose\r\n\ \r\n\ @param\ nuevo\ valor\r\n
comment7.params=
comment7.target=boolean\ getLever()
comment7.text=\r\n\ Retorna\ el\ valor\ de\ lever\r\n\ \r\n\ @return\ valor\ de\ la\ palanca\r\n
comment8.params=
comment8.target=WheelStrut\ getLeft()
comment8.text=\r\n\ Retorna\ el\ valor\ de\ left\r\n\ \r\n\ @return\ valor\ del\ puntal\ izquierdo\r\n
comment9.params=
comment9.target=WheelStrut\ getRight()
comment9.text=\r\n\ Retorna\ el\ valor\ de\ right\r\n\ \r\n\ @return\ valor\ del\ puntal\ derecho\r\n
numComments=22
